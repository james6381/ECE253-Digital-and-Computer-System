// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Web Edition"

// DATE "09/28/2015 21:39:24"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module light (
	x1,
	x2,
	f);
input 	x1;
input 	x2;
output 	f;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \f~output_o ;
wire \x1~input_o ;
wire \x2~input_o ;
wire \f~0_combout ;


cyclonev_io_obuf \f~output (
	.i(\f~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
defparam \f~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \x1~input (
	.i(x1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x1~input_o ));
// synopsys translate_off
defparam \x1~input .bus_hold = "false";
defparam \x1~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \x2~input (
	.i(x2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x2~input_o ));
// synopsys translate_off
defparam \x2~input .bus_hold = "false";
defparam \x2~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \f~0 (
// Equation(s):
// \f~0_combout  = !\x1~input_o  $ (!\x2~input_o )

	.dataa(!\x1~input_o ),
	.datab(!\x2~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f~0 .extended_lut = "off";
defparam \f~0 .lut_mask = 64'h6666666666666666;
defparam \f~0 .shared_arith = "off";
// synopsys translate_on

assign f = \f~output_o ;

endmodule
